name: Run Playwright & API Tests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Tipo de tests a ejecutar'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - web_only
          - api_only
  push:
    branches: [ main, feature/test_api ]
  pull_request:
    branches: [ main ]

jobs:
  web-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'web_only' || github.event.inputs.test_type == 'all' || github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Run Web Tests
        run: pytest tests/ -v --alluredir=allure-results

      - name: Check Allure Results
        run: |
          echo "Contenido de allure-results:"
          ls -la allure-results/ || echo "Directorio allure-results no existe"
          if [ -d "allure-results" ]; then
            echo "Archivos en allure-results:"
            find allure-results -type f
          fi

      - name: Setup Java for Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Allure CLI
        run: |
          curl -o allure-2.24.1.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
          tar -zxvf allure-2.24.1.tgz -C /opt/
          ln -s /opt/allure-2.24.1/bin/allure /usr/local/bin/allure

      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report
          echo "Reporte generado en allure-report/"

      - name: Upload Allure Report (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-web
          path: allure-report/

  api-tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'api_only' || github.event.inputs.test_type == 'all' || github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API Tests
        run: pytest Api/test_api_tecnico.py -v --alluredir=allure-results-api

      - name: Check Allure Results API
        run: |
          echo "Contenido de allure-results-api:"
          ls -la allure-results-api/ || echo "Directorio allure-results-api no existe"
          if [ -d "allure-results-api" ]; then
            echo "Archivos en allure-results-api:"
            find allure-results-api -type f
          fi

      - name: Setup Java for Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Allure CLI
        run: |
          curl -o allure-2.24.1.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
          tar -zxvf allure-2.24.1.tgz -C /opt/
          ln -s /opt/allure-2.24.1/bin/allure /usr/local/bin/allure

      - name: Generate Allure Report for API
        run: |
          allure generate allure-results-api --clean -o allure-report-api
          echo "Reporte API generado en allure-report-api/"

      - name: Upload Allure Report API (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-api
          path: allure-report-api/ 